{"ast":null,"code":"import _toConsumableArray from \"/Users/helenodia/Desktop/DevelopMe/w13_soloproject/dreamteam-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/helenodia/Desktop/DevelopMe/w13_soloproject/dreamteam-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport initial from \"../initial\";\n\nvar setInitial = function setInitial() {\n  return initial;\n};\n\nvar addPlayer = function addPlayer(_ref) {\n  var player = _ref.player;\n  return _objectSpread({}, state, {\n    players: [player].concat(_toConsumableArray(state.players))\n  });\n};\n\nvar initialState = {\n  players: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"addPlayer\":\n      return addPlayer(state, action);\n\n    case \"reset\":\n      return setInitial();\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/helenodia/Desktop/DevelopMe/w13_soloproject/dreamteam-app/src/data/reducers/index.js"],"names":["initial","setInitial","addPlayer","player","state","players","initialState","reducer","action","type"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,YAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMD,OAAN;AAAA,CAAnB;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAEC,MAAF,QAAEA,MAAF;AAAA,2BACdC,KADc;AAEjBC,IAAAA,OAAO,GAAGF,MAAH,4BAAcC,KAAK,CAACC,OAApB;AAFU;AAAA,CAAlB;;AAKA,IAAIC,YAAY,GAAG;AAClBD,EAAAA,OAAO,EAAE;AADS,CAAnB;;AAIA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCH,KAAiC,uEAAzBE,YAAyB;AAAA,MAAXE,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AAAkB,aAAQP,SAAS,CAACE,KAAD,EAAQI,MAAR,CAAjB;;AAClB,SAAK,OAAL;AAAc,aAAOP,UAAU,EAAjB;;AACd;AAAS,aAAOG,KAAP;AAHV;AAKA,CAND;;AAQA,eAAeG,OAAf","sourcesContent":["import initial from \"../initial\";\n\nconst setInitial = () => initial;\n\nconst addPlayer = ({player}) => ({ \n\t...state, \n\tplayers: [player, ...state.players] \n});\n\nlet initialState = {\n\tplayers: []\n};\n\nconst reducer = (state = initialState, action) => { \n\tswitch (action.type) { \n\t\tcase \"addPlayer\": return (addPlayer(state, action)); \n\t\tcase \"reset\": return setInitial();\n\t\tdefault: return state;\n\t}\n};\n\nexport default reducer;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}